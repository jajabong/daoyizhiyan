# 道易智言 - 自动化开发规则

<repo_specific_rule description="AI算命网站项目的自动化开发规则">
# 道易智言 (Dao Yi Zhi Yan) - AI算命网站开发指南

你是一个多智能体系统协调员，在这个环境中扮演两个角色：规划师（Planner）和执行者（Executor）。你的目标是根据当前 `Multi-Agent Scratchpad` 部分的状态，决定完成AI算命网站的下一步开发工作。

## 角色描述

1. **规划师 (Planner)**
   * 职责：执行高级分析，分解任务，定义成功标准，评估当前进度。
   * 行动：通过调用 `PYTHONPATH=. .venv/bin/python tools/plan_exec_llm.py --prompt {任何提示}` 来激活规划师。可以使用 `--file` 选项包含特定文件内容：`PYTHONPATH=. .venv/bin/python tools/plan_exec_llm.py --prompt {任何提示} --file {文件路径}`。

2. **执行者 (Executor)**
   * 职责：执行规划师指示的具体任务，如编写代码，运行测试，处理实现细节等。
   * 行动：完成子任务或需要帮助时，对 `Multi-Agent Scratchpad` 部分进行更新，特别是"当前状态/进度跟踪"和"执行者反馈或协助请求"部分。

## 开发流程指南

* 收到新任务提示后，更新"背景和动机"部分，然后调用规划师进行规划。
* 作为规划师思考时，使用本地命令行 `PYTHONPATH=. .venv/bin/python tools/plan_exec_llm.py --prompt {任何提示} --provider openai --model gpt-4o` 进行深入分析，结果记录在"关键挑战和分析"或"高级任务分解"等部分。
* 作为执行者收到新指令时，使用工具和工作流执行这些任务，完成后写入"当前状态/进度跟踪"和"执行者反馈或协助请求"部分。
* 如果不清楚是规划师还是执行者在说话，请在输出提示中声明当前角色。
* 除非规划师明确表示整个项目已完成或停止，否则继续周期。

## 项目特定规则

* 最小化依赖：尽量使用原生JavaScript和简单的前端技术，避免大型框架，优先使用轻量级解决方案。
* 视觉优先：图片和动画选择至关重要，确保其具有道教和中国传统文化的精神和美学。
* 移动优先：从移动设备设计开始，然后扩展到桌面设计。
* 响应速度：确保所有互动都有快速响应，AI回复应尽量低延迟。
* 无状态：不保存用户数据，每次访问都是全新的体验。

# Multi-Agent Scratchpad

## 背景和动机

该项目旨在创建一个名为"道易智言"的极简AI算命网站，将中国传统道教哲学与现代AI技术相结合。通过一个精美的、以视觉为中心的用户界面，为用户提供基于道教哲学和易经象征原理的启发性回答和建议。

项目强调通过美学设计和富有哲理的AI对话，为用户提供一个平静、启发性的心灵交流空间，而非传统的精确算命。网站采用单会话、即时的对话体验，无需登录或历史记录，让用户能够在每次互动中获得全新的体验。

## 关键挑战和分析

- **视觉设计与用户体验**：需要创造高质量、有氛围的中国风景图片或动画背景，增强用户参与度而不分散对话功能的注意力。如果过度设计会导致延迟或性能问题。
- **AI响应质量**：确保AI聊天提供基于道教哲学和易经原则的有意义、上下文相关的洞见，而无需精确的星象输入。如果响应泛泛或不相关会降低用户信任。
- **极简实现**：平衡简约性（单会话聊天，最少元素）与功能性，确保网站在各种设备上快速加载和顺畅运行。如果功能太少可能导致体验过于简单。
- **AI后端集成**：开发或集成能够实时生成哲学响应的AI模型，延迟低。外部API依赖或第三方AI服务的高成本是潜在风险。
- **自动化开发设置**：在Cursor IDE中配置专用的自动化开发环境。工具调用限制或连接问题可能导致工作流中断。
- **跨浏览器兼容性**：确保Web界面在不同浏览器和设备上一致渲染，特别是考虑到视觉设计的重要性。设计不一致可能需要额外调试。

## 可验证的成功标准

- 网站在标准连接下3秒内加载，确保无缝用户体验
- 聊天界面视觉优雅，背景为高质量中国风景图片或微妙动画，通过小型用户测试组（例如5-10位用户）的积极反馈进行验证
- AI提供基于道教和易经原则的上下文相关哲学见解，在至少80%的抽样互动中，通过手动审查或用户反馈判断
- 网站作为单会话聊天运行，无持久数据或额外页面，保持极简设计
- 完全自动化的开发工作流在`divination_site`子目录中运行，具有功能性的`.cursorrules`文件，实现规划师-执行者协作
- 通过在至少3种主要浏览器（Chrome、Firefox、Safari）上测试，确认跨浏览器兼容性，设计元素渲染一致

## 高级任务分解

### 阶段1：项目设置和自动化开发配置
1. 创建新的子目录`divination_site`，隔离网站开发
2. 在`divination_site`内建立基本项目结构（前端/后端/资产/文档）
3. 设置README.md和项目文档
4. 设置专用的`.cursorrules`文件，启用完全自动化开发
5. 验证实验：在新子目录中运行简单文件创建任务，确认自动化开发设置

### 阶段2：前端设计和实现
1. 设计专注于优雅和可用性的极简聊天界面
   - 中央聊天窗口，干净现代的外观（如半透明背景，消息出现的微妙动画）
   - 背景特色高质量中国风景图片或微妙循环动画
2. 使用轻量级框架实现前端（HTML/CSS/JavaScript）
3. 确保移动和桌面用户的响应式设计
4. 验证实验：创建聊天界面和背景的静态模型，进行快速用户反馈会话（5位用户）

### 阶段3：后端AI逻辑开发
1. 开发或集成能生成基于道教和易经原则的哲学见解的AI模型
2. 设置简单服务器处理聊天请求和AI响应
3. 确保低延迟响应（目标<1秒/回复）
4. 验证实验：构建AI响应系统原型，用10-15个样本用户查询测试相关性和语气

### 阶段4：集成和测试
1. 通过WebSocket或REST API连接前端聊天界面到后端AI服务器
2. 测试端到端功能（聊天流、设计渲染、响应质量）
3. 验证跨浏览器兼容性和移动响应性
4. 验证实验：部署测试版给小组测试者（5-10位用户）收集反馈

### 阶段5：最终完善和部署
1. 基于测试反馈改进设计或AI响应
2. 优化网站性能（图片压缩、延迟加载等）
3. 部署到简单托管平台
4. 完成项目文档和维护说明

## 当前状态/进度跟踪

- 已完成项目目录创建：`divination_site`及其子目录结构（frontend、backend、assets、docs）
- 已创建项目README.md文件，包含项目概述、目录结构和开发路线图
- 正在设置`.cursorrules`文件，启用全自动开发

## 执行者反馈或协助请求

正在初始化项目环境，准备开始设计前端界面。预计将使用HTML、CSS和原生JavaScript进行极简化实现，需要考虑合适的中国风景/道教风格图片资源用于背景。

## 下一步行动项目

1. 创建基本的HTML/CSS框架，优先实现对话界面的基本布局
2. 选择或获取高质量的中国风/道教风格背景图片
3. 实现用户输入和显示回复的基本JavaScript交互
4. 设计并实现AI响应的基本逻辑和格式
5. 进行初步的响应式测试，确保在不同设备上的良好显示
</repo_specific_rule> 